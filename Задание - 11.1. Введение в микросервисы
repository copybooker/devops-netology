# Домашнее задание к занятию "Введение в микросервисы"

## Задача 1: Интернет Магазин
Руководство крупного интернет магазина у которого постоянно растёт пользовательская база и количество заказов рассматривает возможность переделки своей внутренней ИТ системы на основе микросервисов.
Вас пригласили в качестве консультанта для оценки целесообразности перехода на микросервисную архитектуру.
Опишите какие выгоды может получить компания от перехода на микросервисную архитектуру и какие проблемы необходимо будет решить в первую очередь.

### Ответ:
В первую очередь мне, как консультанту, необходимо оценить бизнес-модель Интернет магазина, понять где можно разделить зоны ответственности по модулям, и далее функционал этих модулей будет выполняться на своем микросервисе. Это должны быть простые автономные модули. Например модуль ценообразования и заказов, модуль складского хранения, модуль логистики и т.д.
Далее, оценив имеющуюся IT инфрастуктуру, я предполагаю что данная компания, как и многие другие растущие компании, столкнулась с проблемой ограниченности масштабирования монолитной архитектуры, так как любое монолитное приложение имеет определенный «потолок» в наращивании ресурсов. Также могут быть вопросы к надежности работы имеющегося монолитного решения.
В случае, если действительно подтверждаются ограничения в работе имеющегося решения и бизнес-модель является разделяемой, то переход на микросервисную архитектуру целесообразен, в первую очередь по следующим преимуществам:
- Масштабируемость
У нас не будет “потолка”, система может органично расти вместе с вашим бизнесом и справляться с любыми требуемыми нагрузками
- Повышение отказоустойчивости
Если один микросервис по каким-то причинам даст сбой, то другие продолжат  свою работу, а значит, сайт Интернет магазина не “ляжет” целиком.
- Возможность поэтапного внедрения
Нам не обязательно начать разрабатывать сразу все сервисы. Достаточно  определиться с тем, какой  сервис именно сейчас наиболее актуален для бизнеса, к  тому же поэтапное внедрение  позволит управлять как продуктом, так и  бюджетом на разработку.

Однако существуют и недостатки подхода:
-	Усложнение процесса разработки
Появление новых сервисов требует привлечения дополнительных сил на их разработку и контроль их взаимодействия с уже имеющимися сервисами, иначе может возникнуть ситуация когда внедрение микросервисной архитектуры замедлит скорость разработки и даже снизит операционную эффективность по сравнению с монолитной архитектурой
-	Дополнительные организационные расходы
В процессе привлечения новых команд разработки необходимо наладить процесс взаимодействия между, разграничить зоны ответственности
-	Рост расходов на инфраструктуру
Хотя в целом у нас появится большая гибкость в выделении ресурсов, по сравнения с монолитным приложением, однако у каждого нового микросервиса может быть своя стоимость комплекта  тестов, инструкций по развертыванию, инфраструктуры хостинга,  инструментов мониторинга и т. д. Это может вызвать удорожание проекта в целом.
